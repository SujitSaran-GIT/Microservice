spring.application.name=jobms
server.port=8082

# H2 Database Set Up
spring.h2.console.enabled = true
spring.datasourse.url = jdbc:h2:mem:test
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create-drop
# spring.jpa.hibernate.ddl-auto = update

# PostgreSQL connection
# spring.datasource.url=jdbc:postgresql://job-db:5432/jobdb
# spring.datasource.username=postgres
# spring.datasource.password=Saran@2002
# spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.ddl-auto=update   
# (validate, update, create, create-drop)
# spring.jpa.show-sql=true


# Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Zipkin
management.tracing.sampling.probability=1.0

# Config Server
spring.config.import=optional:configserver:http://localhost:8085
spring.profiles.active=dev

# Actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
management.health.db.enabled=true

# Resiliance4j
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5

resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
Resiliance4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open=true

resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts=5
resilience4j.retry.instances.companyBreaker.wait-duration=2s

# Rate Limiter
resilience4j.ratelimiter.instances.rateLimiter.limit-for-period=5
resilience4j.ratelimiter.instances.rateLimiter.limit-refresh-period=10s
resilience4j.ratelimiter.instances.rateLimiter.timeout-duration=2s